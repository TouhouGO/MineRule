# 注意规则在满足自己需求情况下，尽量做到精简，不要过度复杂，以免影响性能。
# 机场订阅
proxy-providers:
  Airport1:
    url: "YOUR_AIRPORT_SUBSCRIPTION_LINK"  # 请替换为你的机场订阅链接
    type: http
    interval: 86400
    health-check:
      enable: true
      url: https://www.gstatic.com/generate_204
      interval: 300
    # proxy: 直连 # 此行已移除，proxy-providers 不应引用直连

# 节点信息
proxies:
  - {name: 直连, type: direct}

# 全局配置
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7894
allow-lan: true
bind-address: "*"
ipv6: false
unified-delay: true
tcp-concurrent: true
log-level: warning
find-process-mode: 'off'
global-client-fingerprint: chrome

# 控制面板
external-controller: 0.0.0.0:9090
secret: ""
external-ui: "/etc/nikki/run" # 确保此路径在你的环境中存在
external-ui-name: zashboard
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

# 嗅探
sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]

# 入站
tun:
  enable: true
  stack: mixed
  dns-hijack: ["any:53", "tcp://any:53"]
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: false
  respect-rules: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter-mode: blacklist
  fake-ip-filter:
    - "rule-set:private_domain,cn_domain"
    - "+.msftconnecttest.com"
    - "+.msftncsi.com"
    - "time.*.com"
  default-nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - https://223.5.5.5/dns-query
  # nameserver 已移除，避免与 default-nameserver 重复且功能相近

# 出站策略
# 定义锚点以复用策略组选项
pr: &pr {type: select, proxies: [🚀 手动选择, ♻️ 自动选择, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇼🇸 台湾节点, 🇰🇷 韩国节点, 🇨🇦 加拿大节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🇹🇷 土耳其节点, 🌐 其他地区, 直连]}
proxy-groups:
  - {name: 🚀 手动选择, type: select, proxies: [♻️ 自动选择, 🇭🇰 香港节点, 🇺🇸 美国节点, 🇯🇵 日本节点, 🇸🇬 新加坡节点, 🇼🇸 台湾节点, 🇰🇷 韩国节点, 🇨🇦 加拿大节点, 🇬🇧 英国节点, 🇫🇷 法国节点, 🇩🇪 德国节点, 🇳🇱 荷兰节点, 🇹🇷 土耳其节点, 🌐 其他地区, 直连]}
  - {name: ♻️ 自动选择, type: url-test, include-all: true, url: "https://cp.cloudflare.com/generate_204", interval: 300, tolerance: 50}
  - {name: 💬 即时通讯, <<: *pr}
  - {name: 🌐 社交媒体, <<: *pr}
  - {name: 🤖 ChatGPT, <<: *pr}
  - {name: 🤖 Copilot, <<: *pr}
  - {name: 🤖 AI服务, <<: *pr}
  - {name: 🚀 GitHub, <<: *pr}
  - {name: 🚀 测速工具, <<: *pr}
  - {name: 📹 YouTube, <<: *pr}
  - {name: 🎥 AppleTV+, <<: *pr}
  - {name: 🍎 苹果服务, <<: *pr}
  - {name: Ⓜ️ 微软服务, <<: *pr}
  - {name: 📢 谷歌FCM, <<: *pr}
  - {name: 🇬 谷歌服务, <<: *pr}
  - {name: 🎶 TikTok, <<: *pr}
  - {name: 🎥 Netflix, <<: *pr}
  - {name: 🎥 DisneyPlus, <<: *pr}
  - {name: 🎥 HBO, <<: *pr}
  - {name: 🎥 PrimeVideo, <<: *pr}
  - {name: 🎻 Spotify, <<: *pr}
  - {name: 📺 Bahamut, type: select, proxies: [🇼🇸 台湾节点, 🚀 手动选择, 直连]}
  - {name: 🎮 Steam, <<: *pr}
  - {name: 🎮 游戏平台, <<: *pr}
  - {name: 🌎 国外媒体, <<: *pr}
  - {name: 🛒 国外电商, <<: *pr}
  - {name: 🎥 Emby, <<: *pr}
  - {name: 🎯 全球直连, type: select, proxies: [直连, 🚀 手动选择]}
  - {name: 🐟 漏网之鱼, <<: *pr}
  - {name: 🇭🇰 香港节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(港|HK|hk|Hong Kong|HongKong|hongkong|深港)", interval: 300, tolerance: 50}
  - {name: 🇺🇸 美国节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|UnitedStates)", interval: 300, tolerance: 50}
  - {name: 🇯🇵 日本节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|🇯🇵)", interval: 300, tolerance: 50}
  - {name: 🇸🇬 新加坡节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(新加坡|坡|狮城|SG|Singapore)", interval: 300, tolerance: 50}
  - {name: 🇼🇸 台湾节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(台|新北|彰化|TW|Taiwan)", interval: 300, tolerance: 50}
  - {name: 🇰🇷 韩国节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(KR|Korea|KOR|首尔|韩|韓)", interval: 300, tolerance: 50}
  - {name: 🇨🇦 加拿大节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(加拿大|Canada|渥太华|温哥华|卡尔加里)", interval: 300, tolerance: 50}
  - {name: 🇬🇧 英国节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(英国|Great Britain)", interval: 300, tolerance: 50}
  - {name: 🇫🇷 法国节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(法国|France|巴黎)", interval: 300, tolerance: 50}
  - {name: 🇩🇪 德国节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(德国|Germany|柏林|法兰克福)", interval: 300, tolerance: 50}
  - {name: 🇳🇱 荷兰节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(荷兰|Netherlands|阿姆斯特丹)", interval: 300, tolerance: 50}
  - {name: 🇹🇷 土耳其节点, type: smart, uselightgbm: true, collectdata: true, include-all: true, filter: "(土耳其|Turkey|Türkiye)", interval: 300, tolerance: 50}
  - {name: 🌐 其他地区, type: select, uselightgbm: true, collectdata: true, include-all: true, filter: "(^(?!.*(港| HK|hk|Hong Kong|HongKong|hongkong|深港|美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States|UnitedStates|日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan|🇯🇵|新加坡|坡|狮城|SG|Singapore|台|新北|彰化|TW|Taiwan|KR|Korea|KOR|首尔|韩|韓|加拿大|Canada|渥太华|温哥华|卡尔加里|英国|Great Britain|法国|France|巴黎|德国|Germany|柏林|法兰克福|荷兰|Netherlands|阿姆斯特丹|土耳其|Turkey|Türkiye)).*)", url: "https://cp.cloudflare.com/generate_204", interval: 300, tolerance: 50}

# 规则匹配
rules:
  - RULE-SET,emby,🎥 Emby
  - RULE-SET,private_domain,🎯 全球直连
  - RULE-SET,private_ip,🎯 全球直连 # 修正了此行，移除了额外文字
  - RULE-SET,custom_direct,🎯 全球直连
  - RULE-SET,custom_proxy,🚀 手动选择
  - RULE-SET,direct,🎯 全球直连
  - RULE-SET,google_cn,🎯 全球直连
  - RULE-SET,games_cn,🎯 全球直连
  - RULE-SET,steam_cdn,🎯 全球直连
  - RULE-SET,game_platforms_download,🎯 全球直连
  - RULE-SET,public_tracker,🎯 全球直连
  - RULE-SET,communication,💬 即时通讯
  - RULE-SET,social_media,🌐 社交媒体
  - RULE-SET,openai,🤖 ChatGPT
  - RULE-SET,bing,🤖 Copilot
  - RULE-SET,ai,🤖 AI服务
  - RULE-SET,github,🚀 GitHub
  - RULE-SET,speedtest,🚀 测速工具
  - RULE-SET,youtube,📹 YouTube
  - RULE-SET,apple_tvplus,🎥 AppleTV+
  - RULE-SET,apple,🍎 苹果服务
  - RULE-SET,microsoft,Ⓜ️ 微软服务
  - RULE-SET,googlefcm,📢 谷歌FCM
  - RULE-SET,google,🇬 谷歌服务
  - RULE-SET,tiktok,🎶 TikTok
  - RULE-SET,netflix,🎥 Netflix
  - RULE-SET,disney,🎥 DisneyPlus
  - RULE-SET,hbo,🎥 HBO
  - RULE-SET,primevideo,🎥 PrimeVideo
  - RULE-SET,spotify,🎻 Spotify
  - RULE-SET,bahamut,📺 Bahamut
  - RULE-SET,steam,🎮 Steam
  - RULE-SET,games,🎮 游戏平台
  - RULE-SET,entertainment,🌎 国外媒体
  - RULE-SET,ecommerce,🛒 国外电商
  - RULE-SET,gfw,🚀 手动选择
  - RULE-SET,telegram_ip,💬 即时通讯
  - RULE-SET,twitter_ip,🌐 社交媒体
  - RULE-SET,facebook_ip,🌐 社交媒体
  - RULE-SET,google_ip,🇬 谷歌服务
  - RULE-SET,netflix_ip,🎥 Netflix
  #自定义规则补充###自定义规则集第二部###第一步在下面#####
  #############示例###RULE-SET,my_custom_rules,🚀 手动选择
  - RULE-SET,bangumi,🚀 手动选择
  - RULE-SET,forward-widget,🚀 手动选择
  #######################################分割线#########################################
  - RULE-SET,cn_domain,🎯 全球直连
  - RULE-SET,cn_ip,🎯 全球直连
  - MATCH,🐟 漏网之鱼

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 28800, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 28800, behavior: domain, format: mrs}
  class: &class {type: http, interval: 28800, behavior: classical, format: text}
rule-providers:
  emby: { <<: *class, url: "https://raw.githubusercontent.com/TouhouGO/Custom_OpenClash_Rules/refs/heads/main/rule/Emby.list"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  private_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs"}
  custom_direct: { <<: *class, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Custom_Direct.list"}
  custom_proxy: { <<: *class, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Custom_Proxy.list"}
  direct: { <<: *class, url: "https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Clash/Direct/Direct.list"}
  google_cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google-cn.mrs"}
  games_cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games@cn.mrs"}
  steam_cdn: { <<: *class, url: "https://raw.githubusercontent.com/Aethersailor/Custom_OpenClash_Rules/main/rule/Steam_CDN.list"}
  game_platforms_download: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-game-platforms-download.mrs"}
  public_tracker: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-public-tracker.mrs"}
  communication: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-communication.mrs"}
  social_media: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-social-media-!cn.mrs"}
  openai: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/openai.mrs"}
  bing: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bing.mrs"}
  ai: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  github: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  speedtest: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-speedtest.mrs"}
  youtube: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  apple_tvplus: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-tvplus.mrs"}
  apple: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  microsoft: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  googlefcm: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/googlefcm.mrs"}
  google: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  tiktok: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  netflix: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  disney: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/disney.mrs"}
  hbo: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/hbo.mrs"}
  primevideo: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/primevideo.mrs"}
  #################自定义配置
  #################添加自定义规则第一步###########################################################
  #示例###my_custom_rules: { <<: *class, url: "https://raw.githubusercontent.com/yourusername/yourrepo/main/myrules.list" }#################################################
  bangumi: { <<: *class, url: "https://raw.githubusercontent.com/TouhouGO/MineRule/refs/heads/main/Rule-Set/bangumi.list" }
  forward-widget: { <<: *class, url: "https://raw.githubusercontent.com/TouhouGO/MineRule/refs/heads/main/Rule-Set/Forward" }
  #############################################################################################
  spotify: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  bahamut: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bahamut.mrs"}
  steam: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/steam.mrs"}
  games: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-games.mrs"}
  entertainment: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-entertainment.mrs"}
  ecommerce: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ecommerce.mrs"}
  gfw: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  twitter_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/twitter.mrs"}
  facebook_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/facebook.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
